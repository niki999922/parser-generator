grammar GrammarFile;

header {
import java.util.LinkedList;
import java.util.ArrayList;
import java.util.Collections;
}

start = StartRule;

rules [
    StartRule() returns result : String {= ""}
    : p=P() rString=R($p.value$, 2) {result = rString.value.toString();} //if need func so $p.func(a, b , c)
    | {}
    ;

    P() returns value : Int {= 7}
    : TOKEN1 t2=TOKEN2 {var l = 0; var l2 = 8;} ruler=R(l2, l) {value = 7;} //non use non-variable parameters
    | TOKEN1 {println("token 1");} TOKEN2 {println("token 1"); value = 1;}
    ;

    R(acc : Int, acc2 : Int) returns value : Int {= 0}
    : TOKEN3 {value = 13;}
    | { val = acc; }  // ε-правило или пустой блок
    ;

]


tokens [
    WS     = "[ \t\n\r]+";
    WS2    = "[ \t\n\r]+";
    TOKEN1 = "[1-9][0-9]*";
    TOKEN2 = "[+]";
    TOKEN3 = "[-]";
]

ignore [
    WS, WS2;
]